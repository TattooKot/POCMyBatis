<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="org.example.mapper.MemberMapper">



    <resultMap id="memberResultMap" type="org.example.model.Member">
        <id property="memberPId" column="memberPId" />
        <result property="memberId" column="memberId" />
        <result property="memberIdUpper" column="memberIdUpper" />
        <result property="firstName" column="firstName" />
        <result property="firstNameUpper" column="firstNameUpper" />
        <result property="lastNameUpper" column="lastNameUpper" />
        <result property="middleName" column="middleName" />
        <result property="lastName" column="lastName" />
        <result property="suffix" column="suffix" />
        <result property="timeZoneCode" column="timeZoneCode" />
        <result property="cardId" column="cardId" />
        <association property="gender" column="genderId" javaType="org.example.model.Gender">
            <id property="id" column="genderId" />
            <result property="name" column="genderName" />
        </association>
        <association property="client" column="clientCode" javaType="org.example.model.Client">
            <id property="clientCode" column="clientCode" />
            <result property="name" column="clientName" />
        </association>
        <association property="language" column="langId" javaType="org.example.model.Language">
            <id property="langId" column="langId" />
            <result property="name" column="langName" />
        </association>
    </resultMap>

    <!-- Select all members -->
    <sql id="selectForAdmin">
        SELECT
            m.MEMBER_PID AS memberPId,
            m.MEMBER_ID AS memberId,
            m.MEMBER_ID_UPPER AS memberIdUpper,
            m.FIRST_NAME AS firstName,
            m.FIRST_NAME_UPPER AS firstNameUpper,
            m.LAST_NAME_UPPER AS lastNameUpper,
            m.MIDDLE_NAME AS middleName,
            m.LAST_NAME AS lastName,
            m.SUFFIX AS suffix,
            m.TIMEZONE_CODE AS timeZoneCode,
            m.CARD_ID AS cardId,
            g.GENDER_ID AS genderId,
            g.NAME AS genderName,
            c.CLIENT_CODE AS clientCode,
            c.NAME AS clientName,
            l.LANG_ID AS langId,
            l.NAME AS langName
    </sql>

    <sql id="selectForUser">
        SELECT
        m.MEMBER_PID AS memberPId,
        m.MEMBER_ID AS memberId,
        m.MEMBER_ID_UPPER AS memberIdUpper,
        m.FIRST_NAME AS firstName,
        g.GENDER_ID AS genderId,
        g.NAME AS genderName,
        c.CLIENT_CODE AS clientCode,
        c.NAME AS clientName
    </sql>

    <sql id="fromMemberM">FROM MEMBER m</sql>

    <sql id="adminTablesJoin">
        LEFT JOIN GENDER g ON m.GENDER_ID = g.GENDER_ID
        LEFT JOIN CLIENT c ON m.CLIENT_CODE = c.CLIENT_CODE
        LEFT JOIN LANGUAGE l ON m.prim_lang_code = l.LANG_ID;
    </sql>

    <sql id="userTablesJoin">
        LEFT JOIN GENDER g ON m.GENDER_ID = g.GENDER_ID
        LEFT JOIN CLIENT c ON m.CLIENT_CODE = c.CLIENT_CODE;
    </sql>

    <select id="getAllMembers" parameterType="string" resultType="org.example.model.dto.MemberDto">
        <if test='role == "admin"'><include refid="selectForAdmin"/></if>
        <if test='role == "user"'><include refid="selectForUser"/></if>
        <if test="role != null"><include refid="fromMemberM"/></if>
        <if test='role == "admin"'><include refid="adminTablesJoin"/></if>
        <if test='role == "user"'><include refid="userTablesJoin"/></if>
    </select>

    <sql id="adminView">
        SELECT * FROM member_details_view;
    </sql>
    <sql id="userView">
        SELECT * FROM member_details_user_view;
    </sql>

    <select id="getAllMembersView" parameterType="string" resultType="org.example.model.dto.MemberDto">
        <if test='role == "admin"'><include refid="adminView"/></if>
        <if test='role == "user"'><include refid="userView"/></if>
    </select>


    <!-- Select a member by ID -->
    <select id="getMemberById" parameterType="int" resultType="org.example.model.Member">
        SELECT * FROM member WHERE id = #{id}
    </select>

    <!-- Insert a new member -->
    <insert id="insertMember" parameterType="org.example.model.Member">
        INSERT INTO member (name, email) VALUES (#{name}, #{email})
    </insert>

    <!-- Update an existing member -->
    <update id="updateMember" parameterType="org.example.model.Member">
        UPDATE member SET name = #{name}, email = #{email} WHERE id = #{id}
    </update>

    <!-- Delete a member -->
    <delete id="deleteMember" parameterType="int">
        DELETE FROM member WHERE id = #{id}
    </delete>
</mapper>
